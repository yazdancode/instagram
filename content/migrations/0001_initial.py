# Generated by Django 5.1 on 2024-08-26 17:16

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("location", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="created_time"
                    ),
                ),
                (
                    "modified_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="modified_time"
                    ),
                ),
                ("title", models.CharField(max_length=32, verbose_name="title")),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="created_time"
                    ),
                ),
                (
                    "modified_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="modified_time"
                    ),
                ),
                ("caption", models.TextField(blank=True, verbose_name="caption")),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to="location.location",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Post",
                "verbose_name_plural": "Posts",
            },
        ),
        migrations.CreateModel(
            name="PostMedia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="created_time"
                    ),
                ),
                (
                    "modified_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="modified_time"
                    ),
                ),
                (
                    "media_type",
                    models.PositiveIntegerField(
                        choices=[(1, "Image"), (2, "Video")],
                        default=1,
                        verbose_name="media type",
                    ),
                ),
                (
                    "media_file",
                    models.FileField(
                        upload_to="content/media/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=(
                                    "jpg",
                                    "jpeg",
                                    "mp4",
                                    "wmv",
                                    "flv",
                                    "peng",
                                )
                            )
                        ],
                        verbose_name="media file",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media",
                        to="content.post",
                    ),
                ),
            ],
            options={
                "verbose_name": "PostMedia",
                "verbose_name_plural": "PostsMedia",
            },
        ),
        migrations.CreateModel(
            name="PostTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="created_time"
                    ),
                ),
                (
                    "modified_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="modified_time"
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hashtags",
                        to="content.post",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to="content.tag",
                    ),
                ),
            ],
            options={
                "verbose_name": "PostTag",
                "verbose_name_plural": "PostsTags",
            },
        ),
        migrations.CreateModel(
            name="TaggedUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="created_time"
                    ),
                ),
                (
                    "modified_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="modified_time"
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_users",
                        to="content.post",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "TaggedUser",
                "verbose_name_plural": "TaggedUsers",
            },
        ),
    ]
